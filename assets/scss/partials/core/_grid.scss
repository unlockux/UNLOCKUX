// Grid

.row{
    margin: 0 auto;
    max-width: $container-width;
    width: 100%;
    padding-left: $gutter-full;
    padding-right: $gutter-full;
    &:before,
    &:after{
        content: '';
        display: table;
    }
    &:after{ clear: both; }
}
.row-lrg{
    margin: 0 auto;
    max-width: $container-width-lrg;
    width: 100%;

    padding-top: calc(var(--cel,2.5vw) * 2);
    padding-bottom: calc(var(--cel,2.5vw) * 2);
    padding-left: calc(var(--cel,2.5vw) * 3);
    padding-right: calc(var(--cel,2.5vw) * 3);

    // &:before,
    // &:after{
    //     content: '';
    //     display: table;
    // }
    // &:after{ clear: both; }
}

.column{
    width: 100%;
    float: left;
    padding-left: 15px;
    padding-left: 0.9375rem;
    padding-right: 15px;
    padding-right: 0.9375rem;
}

.gutter{
    padding-left: 15px;
    padding-left: 0.9375rem;
    padding-right: 15px;
    padding-right: 0.9375rem;
}



////////////////////////////////////
// FOUNDATION GRID
////////////////////////////////////


// loop the range to define the media query map
@mixin simple-media($grid-query) {
    @if (map-get($grid-layout, $grid-query)) == null {
        @content;
    } @else {
        @media (min-width: #{map-get($grid-layout, $grid-query)}) {
            @content;
        }
    }
}

// loop the range to define the names used in the map
@mixin grids {
    @each $grid-name, $grid-value in $grid-layout {
        $grid-prefix: "#{$grid-name}-";
        @include simple-media($grid-name) {
            .#{$grid-prefix} { @content; }
        }
    }
}

// loop through the range for the number of items to spin out based on the $grid-number
@include grids {
    @for $i from 1 through $grid-columns{
        $c: ($i / $grid-columns * 100%);
        &#{$i} { width: $c; }
        &push-#{$i} { position: relative; left: $c; }
        &pull-#{$i} { position: relative; left: -$c; }
        &offset-#{$i} { margin-left: $c; }
    }
    &offset-0 { margin-left: 0; }
}

@each $grid-name, $grid-value in $grid-layout {
    .#{$grid-name}-auto{ width: auto; }
}


@media (min-width: $breakpoint-sm){
    .small-20{width:20%}
}
@media (min-width: $breakpoint-md){
    .medium-20{width:20%}
}
@media (min-width: $breakpoint-lg){
    .large-20{width:20%}
}
